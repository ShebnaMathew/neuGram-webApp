{"ast":null,"code":"import { INITIAL_STATE, LOGIN_STATE } from \"./stateConstants\";\nimport { STORE_POSTS, LOGIN_SUCCESS, INVALID_LOGIN, LOGIN_NETWORK_ERROR, COMPLETE_ONBOARDING, LOGOUT, NEW_MESSAGE, CONNECTED } from \"./actionConstants\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\n\nfunction rootReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n      return { ...state,\n        loginState: LOGIN_STATE.LOGGED_IN,\n        user: action.payload.user\n      };\n\n    case INVALID_LOGIN:\n      return { ...state,\n        loginState: LOGIN_STATE.INVALID_LOGIN\n      };\n\n    case LOGIN_NETWORK_ERROR:\n      return { ...state,\n        loginState: LOGIN_STATE.NETWORK_ERROR\n      };\n\n    case LOGOUT:\n      return { ...state,\n        user: {},\n        loginState: LOGIN_STATE.LOGGED_OUT\n      };\n\n    case COMPLETE_ONBOARDING:\n      return { ...state,\n        user: { ...state.user,\n          onboardingComplete: true\n        }\n      };\n\n    case STORE_POSTS:\n      return { ...state,\n        posts: action.payload.posts\n      };\n\n    case NEW_MESSAGE:\n      return { ...state,\n        messages: action.payload.messages\n      };\n\n    case CONNECTED:\n      return { ...state,\n        isConnected: true\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default createStore(rootReducer, applyMiddleware(thunkMiddleware));","map":{"version":3,"sources":["/Users/shebthebat/Documents/NEU/Sem 5/CS 7580/bobby_lupo_lisa_lam_miranda_tran_shebna_mathew_finalproject/src/redux/store.js"],"names":["INITIAL_STATE","LOGIN_STATE","STORE_POSTS","LOGIN_SUCCESS","INVALID_LOGIN","LOGIN_NETWORK_ERROR","COMPLETE_ONBOARDING","LOGOUT","NEW_MESSAGE","CONNECTED","createStore","applyMiddleware","thunkMiddleware","rootReducer","state","action","type","loginState","LOGGED_IN","user","payload","NETWORK_ERROR","LOGGED_OUT","onboardingComplete","posts","messages","isConnected"],"mappings":"AAAA,SAAQA,aAAR,EAAuBC,WAAvB,QAAyC,kBAAzC;AACA,SAASC,WAAT,EAAsBC,aAAtB,EAAqCC,aAArC,EAAoDC,mBAApD,EAAyEC,mBAAzE,EAA8FC,MAA9F,EAAsGC,WAAtG,EAAmHC,SAAnH,QAAoI,mBAApI;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;;AAEA,SAASC,WAAT,CAAqBC,KAAK,GAAGd,aAA7B,EAA4Ce,MAA5C,EAAoD;AAChD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,aAAL;AACI,aAAO,EACH,GAAGW,KADA;AAEHG,QAAAA,UAAU,EAAEhB,WAAW,CAACiB,SAFrB;AAGHC,QAAAA,IAAI,EAAEJ,MAAM,CAACK,OAAP,CAAeD;AAHlB,OAAP;;AAKJ,SAAKf,aAAL;AACI,aAAO,EAAC,GAAGU,KAAJ;AAAWG,QAAAA,UAAU,EAAEhB,WAAW,CAACG;AAAnC,OAAP;;AACJ,SAAKC,mBAAL;AACI,aAAO,EAAC,GAAGS,KAAJ;AAAWG,QAAAA,UAAU,EAAEhB,WAAW,CAACoB;AAAnC,OAAP;;AACJ,SAAKd,MAAL;AACI,aAAO,EAAC,GAAGO,KAAJ;AAAWK,QAAAA,IAAI,EAAE,EAAjB;AAAqBF,QAAAA,UAAU,EAAEhB,WAAW,CAACqB;AAA7C,OAAP;;AACJ,SAAKhB,mBAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHK,QAAAA,IAAI,EAAE,EACF,GAAGL,KAAK,CAACK,IADP;AAEFI,UAAAA,kBAAkB,EAAE;AAFlB;AAFH,OAAP;;AAOJ,SAAKrB,WAAL;AACI,aAAO,EAAC,GAAGY,KAAJ;AAAWU,QAAAA,KAAK,EAAET,MAAM,CAACK,OAAP,CAAeI;AAAjC,OAAP;;AACJ,SAAKhB,WAAL;AACI,aAAO,EAAC,GAAGM,KAAJ;AAAWW,QAAAA,QAAQ,EAAEV,MAAM,CAACK,OAAP,CAAeK;AAApC,OAAP;;AACJ,SAAKhB,SAAL;AACI,aAAO,EAAC,GAAGK,KAAJ;AAAWY,QAAAA,WAAW,EAAE;AAAxB,OAAP;;AACJ;AACI,aAAOZ,KAAP;AA5BR;AA8BH;;AAED,eAAeJ,WAAW,CAACG,WAAD,EAAcF,eAAe,CAACC,eAAD,CAA7B,CAA1B","sourcesContent":["import {INITIAL_STATE, LOGIN_STATE} from \"./stateConstants\";\nimport { STORE_POSTS, LOGIN_SUCCESS, INVALID_LOGIN, LOGIN_NETWORK_ERROR, COMPLETE_ONBOARDING, LOGOUT, NEW_MESSAGE, CONNECTED } from \"./actionConstants\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\n\nfunction rootReducer(state = INITIAL_STATE, action) {\n    switch (action.type) {\n        case LOGIN_SUCCESS:\n            return {\n                ...state,\n                loginState: LOGIN_STATE.LOGGED_IN,\n                user: action.payload.user\n            }\n        case INVALID_LOGIN:\n            return {...state, loginState: LOGIN_STATE.INVALID_LOGIN}\n        case LOGIN_NETWORK_ERROR:\n            return {...state, loginState: LOGIN_STATE.NETWORK_ERROR}\n        case LOGOUT:\n            return {...state, user: {}, loginState: LOGIN_STATE.LOGGED_OUT}\n        case COMPLETE_ONBOARDING:\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    onboardingComplete: true\n                }\n            }    \n        case STORE_POSTS: \n            return {...state, posts: action.payload.posts};\n        case NEW_MESSAGE:\n            return {...state, messages: action.payload.messages}\n        case CONNECTED:\n            return {...state, isConnected: true}\n        default:\n            return state;\n    }\n}\n\nexport default createStore(rootReducer, applyMiddleware(thunkMiddleware));"]},"metadata":{},"sourceType":"module"}