{"ast":null,"code":"import store from \"./redux/store\";\nimport { newMessage, isConnected } from \"./redux/actions\";\n/** CLIENT CONFIGURATION - connect to the server */\n\nconst socketIOClient = require(\"socket.io-client\"); // When deployed, connect to the hosted server, otherwise connect to local server\n// Localhost port must match server\n\n\nlet host = process.env.NODE_ENV === 'production' ? \"appname.herokuapp.com\" : \"localhost:4002\";\nlet socket = socketIOClient.connect(host, {\n  secure: true\n}); // Checks which host we're connected to (for troubleshooting);\n\nconsole.log(\"connected to \" + host);\nsocket.on(\"notification\", msg => {\n  console.log(msg);\n});\nsocket.on(\"all messages\", msg => {\n  console.log(msg);\n  store.dispatch(newMessage(msg));\n});\nsocket.on(\"chat joined\", () => {\n  store.dispatch(isConnected());\n}); // This process will allow different clients to have duplicate usernames! A real \n// application should first check with the server to make sure the client's\n// username is unique.\n\nexport const joinChat = username => {\n  socket.emit(\"join\", username);\n};\nexport const sendMessage = msg => {\n  socket.emit(\"new message\", msg);\n};","map":{"version":3,"sources":["/Users/shebthebat/Documents/NEU/Sem 5/CS 7580/bobby_lupo_lisa_lam_miranda_tran_shebna_mathew_finalproject/src/client.js"],"names":["store","newMessage","isConnected","socketIOClient","require","host","process","env","NODE_ENV","socket","connect","secure","console","log","on","msg","dispatch","joinChat","username","emit","sendMessage"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,eAAlB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,iBAAxC;AAEA;;AACA,MAAMC,cAAc,GAAGC,OAAO,CAAC,kBAAD,CAA9B,C,CAEA;AACA;;;AACA,IAAIC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GACP,uBADO,GACmB,gBAD9B;AAEA,IAAIC,MAAM,GAAGN,cAAc,CAACO,OAAf,CAAuBL,IAAvB,EAA6B;AAACM,EAAAA,MAAM,EAAE;AAAT,CAA7B,CAAb,C,CACA;;AACAC,OAAO,CAACC,GAAR,CAAY,kBAAkBR,IAA9B;AAEAI,MAAM,CAACK,EAAP,CAAU,cAAV,EAA0BC,GAAG,IAAI;AAC7BH,EAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH,CAFD;AAIAN,MAAM,CAACK,EAAP,CAAU,cAAV,EAA0BC,GAAG,IAAI;AAC7BH,EAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACAf,EAAAA,KAAK,CAACgB,QAAN,CAAef,UAAU,CAACc,GAAD,CAAzB;AACH,CAHD;AAKAN,MAAM,CAACK,EAAP,CAAU,aAAV,EAAyB,MAAM;AAC3Bd,EAAAA,KAAK,CAACgB,QAAN,CAAed,WAAW,EAA1B;AACH,CAFD,E,CAIA;AACA;AACA;;AACA,OAAO,MAAMe,QAAQ,GAAGC,QAAQ,IAAI;AAChCT,EAAAA,MAAM,CAACU,IAAP,CAAY,MAAZ,EAAoBD,QAApB;AACH,CAFM;AAIP,OAAO,MAAME,WAAW,GAAGL,GAAG,IAAI;AAC9BN,EAAAA,MAAM,CAACU,IAAP,CAAY,aAAZ,EAA2BJ,GAA3B;AACH,CAFM","sourcesContent":["import store from \"./redux/store\";\nimport { newMessage, isConnected } from \"./redux/actions\";\n\n/** CLIENT CONFIGURATION - connect to the server */\nconst socketIOClient = require(\"socket.io-client\");\n\n// When deployed, connect to the hosted server, otherwise connect to local server\n// Localhost port must match server\nlet host = process.env.NODE_ENV === 'production' ?\n    \"appname.herokuapp.com\" : \"localhost:4002\"   \nlet socket = socketIOClient.connect(host, {secure: true});\n// Checks which host we're connected to (for troubleshooting);\nconsole.log(\"connected to \" + host);\n\nsocket.on(\"notification\", msg => {\n    console.log(msg);\n});\n\nsocket.on(\"all messages\", msg => {\n    console.log(msg);\n    store.dispatch(newMessage(msg));\n});\n\nsocket.on(\"chat joined\", () => {\n    store.dispatch(isConnected());\n})\n\n// This process will allow different clients to have duplicate usernames! A real \n// application should first check with the server to make sure the client's\n// username is unique.\nexport const joinChat = username => {\n    socket.emit(\"join\", username);\n}\n\nexport const sendMessage = msg => {\n    socket.emit(\"new message\", msg);\n}"]},"metadata":{},"sourceType":"module"}