{"ast":null,"code":"var _jsxFileName = \"/Users/shebthebat/Documents/NEU/Sem 5/CS 7580/neuGram-webApp/src/components/Posts.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Post from \"./Post\";\nimport { ADD_POST_PAGE, VIEW_POST } from \"../redux/actionConstants\";\nimport AddPost from \"./AddPost\";\nimport { LOGIN_STATE } from \"../redux/stateConstants\";\nimport { logout, addPostPage, completeOnboarding } from \"../redux/actions\";\nimport Profile from \"./Profile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Posts = () => {\n  _s();\n\n  const posts = useSelector(state => state.posts);\n  const viewState = useSelector(state => state.viewState);\n  const loginState = useSelector(state => state.loginState);\n  const profileView = useSelector(state => state.profileView);\n  const isNewUser = useSelector(state => state.isNewUser);\n  const userId = useSelector(state => state.user.userId);\n  const username = useSelector(state => state.user.username);\n  const dispatch = useDispatch();\n  const ids = Object.keys(posts); // sort the post ids by time\n\n  const rearrangedIds = ids.map(id => {\n    const date = posts[id].datePosted;\n    return [date, id];\n  }).sort((elem1, elem2) => {\n    return elem1[0] > elem2[0] ? 1 : elem1[0] < elem2[0] ? -1 : 0;\n  }).reverse();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container container-no-margins posts\",\n    children: view ? /*#__PURE__*/_jsxDEV(Profile, {\n      posts: rearrangedIds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-post-header\",\n        children: loginState === LOGIN_STATE.LOGGED_IN && viewState === VIEW_POST && isNewUser !== undefined && !isNewUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn add-button\",\n            onClick: () => dispatch(addPostPage()),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)\n        }, void 0, false) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row row-cols-3 justify-content-center\",\n        children: rearrangedIds.map((element, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cols justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(Post, {\n              id: element[1]\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Posts, \"COuflUw4PQr2+97ZaAf3QnO8Zqo=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/shebthebat/Documents/NEU/Sem 5/CS 7580/neuGram-webApp/src/components/Posts.js"],"names":["useSelector","useDispatch","Post","ADD_POST_PAGE","VIEW_POST","AddPost","LOGIN_STATE","logout","addPostPage","completeOnboarding","Profile","Posts","posts","state","viewState","loginState","profileView","isNewUser","userId","user","username","dispatch","ids","Object","keys","rearrangedIds","map","id","date","datePosted","sort","elem1","elem2","reverse","view","LOGGED_IN","undefined","element","index"],"mappings":"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","sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\nimport Post from \"./Post\";\nimport { ADD_POST_PAGE, VIEW_POST } from \"../redux/actionConstants\";\nimport AddPost from \"./AddPost\";\nimport { LOGIN_STATE } from \"../redux/stateConstants\";\nimport { logout, addPostPage, completeOnboarding } from \"../redux/actions\";\nimport Profile from \"./Profile\";\n\nconst Posts = () => {\n    const posts = useSelector(state => state.posts);\n    const viewState = useSelector(state => state.viewState);\n    const loginState = useSelector(state => state.loginState);\n    const profileView = useSelector(state => state.profileView);\n    const isNewUser = useSelector(state => state.isNewUser);\n    const userId = useSelector(state => state.user.userId);\n    const username = useSelector(state => state.user.username);\n    const dispatch = useDispatch();\n    const ids = Object.keys(posts);\n    \n    // sort the post ids by time\n    const rearrangedIds = ids.map(id => {\n        const date = posts[id].datePosted;\n        return [date, id]\n    }).sort((elem1, elem2) => {\n        return elem1[0] > elem2[0] ? 1 : elem1[0] < elem2[0] ? -1 : 0;\n    }).reverse()\n\n    return (\n\n        <div className=\"container container-no-margins posts\">\n            \n            \n            {(view) ? <Profile posts={rearrangedIds}/>:\n            <>\n            <div className=\"add-post-header\">\n            {\n                    (loginState === LOGIN_STATE.LOGGED_IN && viewState === VIEW_POST && (isNewUser !== undefined && !isNewUser)) ? \n                    <>\n                        <button className=\"btn add-button\" onClick={() => dispatch(addPostPage())}>\n                            +\n                        </button>\n                    </>:\"\"\n                }\n            </div>\n            <div className=\"row row-cols-3 justify-content-center\">\n            {rearrangedIds.map((element, index)=>{\n                return (\n                    <div className=\"cols justify-content-center\">\n                        <Post key={index} id={element[1]} />\n                    </div>\n                )\n            })}\n            </div>\n            </>\n            }\n        </div>\n    )\n}\n\nexport default Posts"]},"metadata":{},"sourceType":"module"}