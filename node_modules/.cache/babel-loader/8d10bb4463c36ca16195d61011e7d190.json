{"ast":null,"code":"import { INITIAL_STATE, LOGIN_STATE } from \"./stateConstants\";\nimport { STORE_POSTS, LOGIN_SUCCESS, INVALID_LOGIN, LOGIN_NETWORK_ERROR, COMPLETE_ONBOARDING, LOGOUT } from \"./actionConstants\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\n\nfunction rootReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n      return { ...state,\n        loginState: LOGIN_STATE.LOGGED_IN,\n        user: action.payload.user\n      };\n\n    case INVALID_LOGIN:\n      return { ...state,\n        loginState: LOGIN_STATE.INVALID_LOGIN\n      };\n\n    case LOGIN_NETWORK_ERROR:\n      return { ...state,\n        loginState: LOGIN_STATE.NETWORK_ERROR\n      };\n\n    case LOGOUT:\n      return { ...state,\n        user: {},\n        loginState: LOGIN_STATE.LOGGED_OUT\n      };\n\n    case COMPLETE_ONBOARDING:\n      return { ...state,\n        user: { ...state.user,\n          onboardingComplete: true\n        }\n      };\n\n    case STORE_POSTS:\n      return { ...state,\n        posts: action.payload.posts\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default createStore(rootReducer, applyMiddleware(thunkMiddleware));","map":{"version":3,"sources":["/Users/shebthebat/Documents/NEU/Sem 5/CS 7580/bobby_lupo_lisa_lam_miranda_tran_shebna_mathew_finalproject/src/redux/store.js"],"names":["INITIAL_STATE","LOGIN_STATE","STORE_POSTS","LOGIN_SUCCESS","INVALID_LOGIN","LOGIN_NETWORK_ERROR","COMPLETE_ONBOARDING","LOGOUT","createStore","applyMiddleware","thunkMiddleware","rootReducer","state","action","type","loginState","LOGGED_IN","user","payload","NETWORK_ERROR","LOGGED_OUT","onboardingComplete","posts"],"mappings":"AAAA,SAAQA,aAAR,EAAuBC,WAAvB,QAAyC,kBAAzC;AACA,SAASC,WAAT,EAAsBC,aAAtB,EAAqCC,aAArC,EAAoDC,mBAApD,EAAyEC,mBAAzE,EAA8FC,MAA9F,QAA4G,mBAA5G;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;;AAGA,SAASC,WAAT,CAAqBC,KAAK,GAAGZ,aAA7B,EAA4Ca,MAA5C,EAAoD;AAChD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,aAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHG,QAAAA,UAAU,EAAEd,WAAW,CAACe,SAFrB;AAGHC,QAAAA,IAAI,EAAEJ,MAAM,CAACK,OAAP,CAAeD;AAHlB,OAAP;;AAKJ,SAAKb,aAAL;AACI,aAAO,EAAC,GAAGQ,KAAJ;AAAWG,QAAAA,UAAU,EAAEd,WAAW,CAACG;AAAnC,OAAP;;AACJ,SAAKC,mBAAL;AACI,aAAO,EAAC,GAAGO,KAAJ;AAAWG,QAAAA,UAAU,EAAEd,WAAW,CAACkB;AAAnC,OAAP;;AACJ,SAAKZ,MAAL;AACI,aAAO,EAAC,GAAGK,KAAJ;AAAWK,QAAAA,IAAI,EAAE,EAAjB;AAAqBF,QAAAA,UAAU,EAAEd,WAAW,CAACmB;AAA7C,OAAP;;AACJ,SAAKd,mBAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHK,QAAAA,IAAI,EAAE,EACF,GAAGL,KAAK,CAACK,IADP;AAEFI,UAAAA,kBAAkB,EAAE;AAFlB;AAFH,OAAP;;AAOJ,SAAKnB,WAAL;AACI,aAAO,EAAC,GAAGU,KAAJ;AAAWU,QAAAA,KAAK,EAAET,MAAM,CAACK,OAAP,CAAeI;AAAjC,OAAP;;AACJ;AACI,aAAOV,KAAP;AAxBR;AA0BH;;AAED,eAAeJ,WAAW,CAACG,WAAD,EAAcF,eAAe,CAACC,eAAD,CAA7B,CAA1B","sourcesContent":["import {INITIAL_STATE, LOGIN_STATE} from \"./stateConstants\";\nimport { STORE_POSTS, LOGIN_SUCCESS, INVALID_LOGIN, LOGIN_NETWORK_ERROR, COMPLETE_ONBOARDING, LOGOUT } from \"./actionConstants\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\n\n\nfunction rootReducer(state = INITIAL_STATE, action) {\n    switch (action.type) {\n        case LOGIN_SUCCESS:\n            return {\n                ...state,\n                loginState: LOGIN_STATE.LOGGED_IN,\n                user: action.payload.user\n            }\n        case INVALID_LOGIN:\n            return {...state, loginState: LOGIN_STATE.INVALID_LOGIN}\n        case LOGIN_NETWORK_ERROR:\n            return {...state, loginState: LOGIN_STATE.NETWORK_ERROR}\n        case LOGOUT:\n            return {...state, user: {}, loginState: LOGIN_STATE.LOGGED_OUT}\n        case COMPLETE_ONBOARDING:\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    onboardingComplete: true\n                }\n            }    \n        case STORE_POSTS: \n            return {...state, posts: action.payload.posts};\n        default:\n            return state;\n    }\n}\n\nexport default createStore(rootReducer, applyMiddleware(thunkMiddleware));"]},"metadata":{},"sourceType":"module"}