{"ast":null,"code":"import { INITIAL_STATE, LOGIN_STATE } from \"./stateConstants\";\nimport { STORE_POSTS, LOGIN_SUCCESS, INVALID_LOGIN, LOGIN_NETWORK_ERROR, COMPLETE_ONBOARDING, LOGOUT, NEW_MESSAGE, UPDATE_DOWNLOAD_URL, CONNECTED, STORE_USERS, ADD_REPLY, UPDATE_REACTS, ADD_POST_PAGE, VIEW_POST, STORE_ONLINE_USERS, CREATE_SUCCESS } from \"./actionConstants\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\n\nfunction rootReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case STORE_ONLINE_USERS:\n      {\n        return { ...state,\n          onlineUsers: action.payload.onlineUsers\n        };\n      }\n\n    case VIEW_POST:\n      {\n        return { ...state,\n          viewState: VIEW_POST\n        };\n      }\n\n    case ADD_POST_PAGE:\n      {\n        return { ...state,\n          viewState: ADD_POST_PAGE\n        };\n      }\n\n    case CREATE_SUCCESS:\n      {\n        return { ...state,\n          users: action.payload.users\n        };\n      }\n\n    case STORE_USERS:\n      {\n        return { ...state,\n          users: action.payload.users\n        };\n      }\n\n    case LOGIN_SUCCESS:\n      return { ...state,\n        loginState: LOGIN_STATE.LOGGED_IN,\n        user: action.payload.user,\n        isNewUser: action.payload.user.isNewUser\n      };\n\n    case INVALID_LOGIN:\n      return { ...state,\n        loginState: LOGIN_STATE.INVALID_LOGIN\n      };\n\n    case LOGIN_NETWORK_ERROR:\n      return { ...state,\n        loginState: LOGIN_STATE.NETWORK_ERROR\n      };\n\n    case LOGOUT:\n      return { ...state,\n        user: {},\n        loginState: LOGIN_STATE.LOGGED_OUT,\n        viewState: VIEW_POST,\n        isNewUser: false\n      };\n\n    case COMPLETE_ONBOARDING:\n      return { ...state,\n        user: { ...state.user,\n          isNewUser: action.payload.isNewUser\n        },\n        isNewUser: action.payload.user.isNewUser\n      };\n\n    case STORE_POSTS:\n      return { ...state,\n        posts: action.payload.posts\n      };\n\n    case NEW_MESSAGE:\n      return { ...state,\n        messages: action.payload.messages\n      };\n\n    case CONNECTED:\n      return { ...state,\n        isConnected: true\n      };\n\n    case ADD_REPLY:\n      const currentPosts = { ...state.posts\n      };\n      const updated = currentPosts[action.payload.postId];\n      updated.replies.push(action.payload.reply);\n      return { ...state,\n        posts: currentPosts\n      };\n\n    case UPDATE_REACTS:\n      const currentPostsWithReacts = { ...state.posts\n      };\n      const updatedReacts = currentPostsWithReacts[action.payload.postId];\n      updatedReacts.reacts = action.payload.reacts;\n      return { ...state,\n        posts: currentPostsWithReacts\n      };\n\n    case UPDATE_DOWNLOAD_URL:\n      return { ...state,\n        url: action.payload.url\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default createStore(rootReducer, applyMiddleware(thunkMiddleware));","map":{"version":3,"sources":["/Users/shebthebat/Documents/NEU/Sem 5/CS 7580/neuGram-webApp/src/redux/store.js"],"names":["INITIAL_STATE","LOGIN_STATE","STORE_POSTS","LOGIN_SUCCESS","INVALID_LOGIN","LOGIN_NETWORK_ERROR","COMPLETE_ONBOARDING","LOGOUT","NEW_MESSAGE","UPDATE_DOWNLOAD_URL","CONNECTED","STORE_USERS","ADD_REPLY","UPDATE_REACTS","ADD_POST_PAGE","VIEW_POST","STORE_ONLINE_USERS","CREATE_SUCCESS","createStore","applyMiddleware","thunkMiddleware","rootReducer","state","action","type","onlineUsers","payload","viewState","users","loginState","LOGGED_IN","user","isNewUser","NETWORK_ERROR","LOGGED_OUT","posts","messages","isConnected","currentPosts","updated","postId","replies","push","reply","currentPostsWithReacts","updatedReacts","reacts","url"],"mappings":"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","sourcesContent":["import {INITIAL_STATE, LOGIN_STATE} from \"./stateConstants\";\nimport { STORE_POSTS, LOGIN_SUCCESS, INVALID_LOGIN, LOGIN_NETWORK_ERROR, COMPLETE_ONBOARDING, \n\n    LOGOUT, NEW_MESSAGE, UPDATE_DOWNLOAD_URL, CONNECTED, STORE_USERS, ADD_REPLY, UPDATE_REACTS, ADD_POST_PAGE, VIEW_POST, STORE_ONLINE_USERS, CREATE_SUCCESS } from \"./actionConstants\";\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\n\nfunction rootReducer(state = INITIAL_STATE, action) {\n    switch (action.type) {\n        case STORE_ONLINE_USERS: {\n            return {...state, onlineUsers: action.payload.onlineUsers}\n        }\n        case VIEW_POST: {\n            return {...state, viewState: VIEW_POST}\n        }\n        case ADD_POST_PAGE: {\n            return {...state, viewState: ADD_POST_PAGE}\n        }\n        case CREATE_SUCCESS: {\n            return {...state, users: action.payload.users};\n        }\n        case STORE_USERS: {\n            return {...state, users: action.payload.users};\n        }\n        case LOGIN_SUCCESS:\n            return {\n                ...state,\n                loginState: LOGIN_STATE.LOGGED_IN,\n                user: action.payload.user,\n                isNewUser: action.payload.user.isNewUser\n            }\n        case INVALID_LOGIN:\n            return {...state, loginState: LOGIN_STATE.INVALID_LOGIN}\n        case LOGIN_NETWORK_ERROR:\n            return {...state, loginState: LOGIN_STATE.NETWORK_ERROR}\n        case LOGOUT:\n            return {\n                ...state, \n                user: {}, \n                loginState: LOGIN_STATE.LOGGED_OUT,\n                viewState: VIEW_POST,\n                isNewUser: false\n            }\n        case COMPLETE_ONBOARDING:\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    isNewUser: action.payload.isNewUser\n                },\n                isNewUser: action.payload.user.isNewUser\n            }    \n        case STORE_POSTS: \n            return {...state, posts: action.payload.posts};\n        case NEW_MESSAGE:\n            return {...state, messages: action.payload.messages}\n        case CONNECTED:\n            return {...state, isConnected: true}\n        case ADD_REPLY:\n            const currentPosts = {...state.posts};\n            const updated = currentPosts[action.payload.postId];\n            updated.replies.push(action.payload.reply);\n            return {...state,\n                posts:currentPosts\n            }\n        case UPDATE_REACTS:\n            const currentPostsWithReacts = {...state.posts};\n            const updatedReacts = currentPostsWithReacts[action.payload.postId];\n            updatedReacts.reacts = (action.payload.reacts);\n            return {...state,\n                posts:currentPostsWithReacts\n            }\n        case UPDATE_DOWNLOAD_URL:\n            return {...state, url: action.payload.url}\n        default:\n            return state;\n    }\n}\n\nexport default createStore(rootReducer, applyMiddleware(thunkMiddleware));"]},"metadata":{},"sourceType":"module"}